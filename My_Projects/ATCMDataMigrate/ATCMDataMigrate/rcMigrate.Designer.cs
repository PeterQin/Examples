//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ATCMDataMigrate {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class rcMigrate {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal rcMigrate() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ATCMDataMigrate.rcMigrate", typeof(rcMigrate).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [{0}]  
        ///DECLARE ATCM_DataTable_Names_Cursor CURSOR 
        ///FOR 
        ///select distinct(dt.DataTableName) from DataTable as dt join INFORMATION_SCHEMA.TABLES as alltable
        ///on alltable.TABLE_NAME = dt.DataTableName order by dt.DataTableName;
        ///OPEN ATCM_DataTable_Names_Cursor 
        ///DECLARE @tablename nvarchar(255)
        ///FETCH NEXT FROM ATCM_DataTable_Names_Cursor INTO @tablename 
        ///WHILE (@@FETCH_STATUS = 0) 
        ///BEGIN 
        /// EXEC (&apos;ALTER TABLE [&apos;+@tablename +&apos;] ADD CONSTRAINT UQ_&apos;+ @tablename +&apos; UNIQUE NONCLUSTERED (DataID, ProjectID [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AddRelationDataTables {
            get {
                return ResourceManager.GetString("AddRelationDataTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [{0}] 
        ///CREATE TABLE [dbo].[Projects](
        ///	[ProjectID] [int] IDENTITY(1,1) NOT NULL,
        ///	[ProjectName] [varchar](50) NULL
        ///	CONSTRAINT [PK_Projects] PRIMARY KEY CLUSTERED 
        ///	(
        ///		[ProjectID] ASC
        ///	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
        ///) ON [PRIMARY].
        /// </summary>
        internal static string CreaeteProjectTable {
            get {
                return ResourceManager.GetString("CreaeteProjectTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}] 
        ///--Primary key 
        ///ALTER TABLE TestObjective Add CONSTRAINT UQ_TestObjective UNIQUE NONCLUSTERED (Objective, ProjectID), primary key (ObjectiveID, ProjectID);
        ///ALTER TABLE Workflow ADD CONSTRAINT UQ_Workflow primary key (WorkflowID, ProjectID);
        ///ALTER TABLE DataTable ADD CONSTRAINT UQ_DataTable UNIQUE NONCLUSTERED (DataTableName, ProjectID),primary key (DataTableID,ProjectID );
        ///ALTER TABLE command ADD CONSTRAINT UQ_command UNIQUE NONCLUSTERED(CommandName, ProjectID), primary key (CommandName, Proj [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateRelation {
            get {
                return ResourceManager.GetString("CreateRelation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if not exists (SELECT * FROM [{0}].[dbo].[{1}] where {2}) delete from [{0}].[dbo].[{3}] where {2}.
        /// </summary>
        internal static string RemoveUnused {
            get {
                return ResourceManager.GetString("RemoveUnused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [{0}] 
        ///DECLARE ATCM_Table_Names_Cursor CURSOR 
        ///FOR 
        ///SELECT TABLE_NAME 
        ///FROM INFORMATION_SCHEMA.TABLES
        ///OPEN ATCM_Table_Names_Cursor 
        ///DECLARE @tablename sysname
        ///FETCH NEXT FROM ATCM_Table_Names_Cursor INTO @tablename 
        ///WHILE (@@FETCH_STATUS = 0) 
        ///BEGIN 
        /// EXEC (&apos;select * into [{1}].[dbo].[&apos;+@tablename+&apos;] from [{0}].[dbo].[&apos;+@tablename+&apos;]&apos;)
        /// EXEC (&apos;ALTER TABLE [{1}].[dbo].[&apos;+@tablename+&apos;] ADD ProjectID INT NOT NULL DEFAULT({2})&apos;)
        /// FETCH NEXT FROM ATCM_Table_Names_Cursor INTO @tablename 
        ///END 
        ///CL [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SelectIntoAllTable {
            get {
                return ResourceManager.GetString("SelectIntoAllTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select * from [{0}].[dbo].[{1}] where 1=2.
        /// </summary>
        internal static string SelectNoResult {
            get {
                return ResourceManager.GetString("SelectNoResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALTER TABLE [{0}].[dbo].[{1}] ADD [{2}] {3}.
        /// </summary>
        internal static string sql_AddCol {
            get {
                return ResourceManager.GetString("sql_AddCol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select name from sys.databases.
        /// </summary>
        internal static string sql_AllDBName {
            get {
                return ResourceManager.GetString("sql_AllDBName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use[{0}]
        ///select cols.name,cols.is_identity  from sys.all_columns as cols join sys.all_objects as obj on obj.object_id = cols.object_id 
        ///where obj.type = &apos;U&apos; and obj.name = &apos;{1}&apos; and cols.name &lt;&gt; &apos;upsize_ts&apos;.
        /// </summary>
        internal static string sql_GetAllColumn {
            get {
                return ResourceManager.GetString("sql_GetAllColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///select dt.DataTableName from DataTable as dt.
        /// </summary>
        internal static string sql_GetAllDataTableName {
            get {
                return ResourceManager.GetString("sql_GetAllDataTableName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use[{0}]
        ///SELECT TABLE_NAME 
        ///FROM INFORMATION_SCHEMA.TABLES.
        /// </summary>
        internal static string sql_GetAllTable {
            get {
                return ResourceManager.GetString("sql_GetAllTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select ty.name from sys.types as ty 
        ///join sys.all_columns as col on col.system_type_id = ty.system_type_id 
        ///join sys.all_objects as obj on col.object_id = obj.object_id
        ///where col.name = &apos;{0}&apos; and obj.name = &apos;{1}&apos; and ty.system_type_id  = ty.user_type_id.
        /// </summary>
        internal static string sql_GetColType {
            get {
                return ResourceManager.GetString("sql_GetColType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [{0}].[dbo].[{1}](ProjectID,{2}) select {3},{2} from [{4}].[dbo].[{1}].
        /// </summary>
        internal static string sql_InsertInto {
            get {
                return ResourceManager.GetString("sql_InsertInto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [{0}].[dbo].[{1}]({2}) select {2} from [{3}].[dbo].[{1}].
        /// </summary>
        internal static string sql_InsertInto_AddCol {
            get {
                return ResourceManager.GetString("sql_InsertInto_AddCol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to set identity_insert [{0}].[dbo].[{1}] on
        ///INSERT INTO [{0}].[dbo].[{1}]({2}) select {2} from [{3}].[dbo].[{1}]
        ///set identity_insert [{0}].[dbo].[{1}] off.
        /// </summary>
        internal static string sql_InsertIntoWithIdentity_AddCol {
            get {
                return ResourceManager.GetString("sql_InsertIntoWithIdentity_AddCol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to set identity_insert [{0}].[dbo].[{1}] on
        ///INSERT INTO [{0}].[dbo].[{1}](ProjectID,{2}) select {3},{2} from [{4}].[dbo].[{1}]
        ///set identity_insert [{0}].[dbo].[{1}] off.
        /// </summary>
        internal static string sql_InsertIntoWithIndentity {
            get {
                return ResourceManager.GetString("sql_InsertIntoWithIndentity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * into [{0}].[dbo].[{1}] from [{2}].[dbo].[{1}];
        ///ALTER TABLE [{0}].[dbo].[{1}] ADD ProjectID INT NOT NULL DEFAULT({3});.
        /// </summary>
        internal static string sql_SelectInto {
            get {
                return ResourceManager.GetString("sql_SelectInto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to set identity_insert  [{0}].[dbo].[{1}] on.
        /// </summary>
        internal static string sql_SetIdentityInsert {
            get {
                return ResourceManager.GetString("sql_SetIdentityInsert", resourceCulture);
            }
        }
    }
}
