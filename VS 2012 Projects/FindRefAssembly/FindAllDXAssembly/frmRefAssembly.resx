<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAYAkAAMQOAADEDgAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD+/v4A/f39APv7+wD29vYA8vLyAO7u7gDq6uoA5+fnAObm
        5gDm5uYA5+fnAOnp6QDH3tIAM6dnAGC5iQDz9/UA/Pz8AP7+/gD///8A////AP///wD///8A////AP//
        /wD9/f0A+vr6APX19QDw8PAA6urqAOXl5QDg4OAA3t7eANzc3ADc3NwA3d3dAL3UyAAypmYAJqJeACai
        XgBguYkA8vb0APz8/AD///8A////AP///wD///8A////AP39/QD7+/sA9fX1AO/v7wDn5+cA4eHhANvb
        2wDY2NgA1tbWANbW1gDW1tYAtczAADKmZgAmol4AJqJeACaiXgAmol4AYLmJAPP39QD///8A////AP//
        /wD///8A/v7+APz8/AD39/cA8PDwAOjo6ADg4OAA2dnZANbW1gDV1dUA1tbWANjY2AC2zcEAMaVlACai
        XgAmol4AJqJeACaiXgAmol4AP6xwANvq4gD///8A////AP///wD///8A/f39APr6+gDz8/MA6+vrAOHh
        4QDZ2dkA1tbWANbW1gDZ2dkA3d3dAL3UyAAypmYAJqJeACaiXgAmol4AJqJeACaiXgA9qm4A0eDYAPLy
        8gD///8A////AP///wD///8A/Pz8APf39wDv7+8A5ubmANzc3ADW1tYA1tbWANnZ2QDf398A3+PhADip
        awAmol4AJqJeACaiXgAmol4AJqJeADypbQDF1MwA5OTkAO7u7gD///8A////AP///wD///8A/Pz8APX1
        9QDs7OwAsMywAIe3hwBepl4AWaVZAH21fQCszKwA7u7uALncyAAtpWMAJqJeACaiXgAmol4APKltAMDP
        xwDY2NgA4ODgAOrq6gD///8A////AP///wD///8A+/v7AOTs5ABYqFgAAIAAAACAAAAAgAAAAIAAAACA
        AAAAgAAANpo2ANTo1AC/4s4ALaVjACaiXgA+q28AxtXNANfX1wDX19cA3t7eAOfn5wD///8A////AP//
        /wD///8Ay+PLABeLFwAAgAAAB4MHAEObQwBrq2sAfLR8AFenVwAXixcAAIAAAAiECACezp4Av+LOAEav
        dQDR4NgA4ODgANjY2ADW1tYA3d3dAOfn5wD///8A////AP///wD3+/cAJ5MnAACAAAAzlzMAvNC8ANbW
        1gDW1tYA3d3dAObm5gDg6OAAXq5eAACAAAAIhAgA0+fTAPLy8gDo6OgA39/fANfX1wDW1tYA3d3dAOfn
        5wD///8A////AP///wBgsGAAAIAAACaSJgDj5+MA4ODgANfX1wDV1dUA2traAOLi4gDr6+sA9PT0AF2t
        XQAAgAAANpo2AO3t7QDk5OQA3NzcANbW1gDX19cA39/fAOjo6AD///8A////APf79wAIhAgAAIAAAL/b
        vwDt7e0A4+PjANnZ2QDV1dUA19fXANzc3ADj4+MA6+vrAODo4AAWihYAAIAAALrSugDe3t4A2dnZANXV
        1QDZ2dkA4eHhAOvr6wD///8A////AM/nzwAAgAAAIJAgAPj4+ADw8PAA5+fnAN7e3gDX19cA1tbWANjY
        2ADc3NwA4uLiAObm5gBIoEgAAIAAAJG9kQDZ2dkA1tbWANfX1wDc3NwA5ubmAO7u7gD///8A////AJ/P
        nwAAgAAAUKhQAPv7+wD19fUA7e3tAOPj4wDb29sA19fXANbW1gDX19cA2traAN3d3QB1sXUAAIAAAF+n
        XwDW1tYA19fXANra2gDi4uIA6+vrAPPz8wD///8A////AK/XrwAAgAAASKRIAPz8/AD4+PgA8vLyAOrq
        6gDi4uIA29vbANfX1wDV1dUA1dXVANbW1gBepl4AAIAAAGqqagDX19cA2traAODg4ADo6OgA8fHxAPf3
        9wD///8A////AN/v3wAAgAAAEIgQAP7+/gD8/PwA9/f3APHx8QDq6uoA5OTkAN7e3gDa2toA2NjYANfX
        1wA2ljYAAIAAAJW9lQDd3d0A4uLiAOnp6QDw8PAA9vb2APv7+wD///8A////AP///wAYjBgAAIAAAIfD
        hwD9/f0A/Pz8APf39wDy8vIA7e3tAOfn5wDk5OQA4eHhAK/LrwAAgAAAAIAAAM7azgDn5+cA7OzsAPHx
        8QD29vYA+/v7AP39/QD///8A////AP///wCn06cAAIAAAAiECAC/378A/f39APz8/AD4+PgA9fX1APHx
        8QDu7u4A1eHVACWRJQAAgAAAbrJuAO3t7QDw8PAA9PT0APj4+AD7+/sA/f39AP///wD///8A////AP//
        /wD///8AYLBgAACAAAAIhAgAh8OHAP7+/gD8/PwA+/v7APj4+ACw1LAAF4sXAACAAAAmkiYA7PDsAPX1
        9QD39/cA+vr6APz8/AD+/v4A////AP///wD///8A////AP///wD///8A7/fvAGCwYAAAgAAAAIAAAACA
        AABAoEAAQKBAAAiECAAAgAAAAIAAADebNwDc7NwA/Pz8APz8/AD9/f0A/v7+AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wCv168AIJAgAACAAAAAgAAAAIAAAACAAAAQiBAAf79/AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AO/37wC/378Av9+/AOfz5wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
</root>