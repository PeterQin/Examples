<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" 
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
                    xmlns:local="clr-namespace:WpfApplication3">

    <local:ContentToPathConverter x:Key="con"/>
    <local:ContentToPathConverter2 x:Key="conv2"/>
    <ControlTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=CloseButtonTemplate}" TargetType="{x:Type Button}">
        <Grid Background="#00FF00FF">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused" />
                    <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="00:00:00" Value="#FF9D0E0E" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="pressed" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="00:00:00" Value="#FF9D0E0E" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.35" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Button" Background="#00000000">
                <Border x:Name="hover" Background="#FF8EA7C4" CornerRadius="2" Visibility="Collapsed">
                    <Border CornerRadius="1" Margin="1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFFFFFFF" Offset="0" />
                                <GradientStop Color="#FFE0EEFF" Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border CornerRadius="1" Margin="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF5F9FF" Offset="0" />
                                    <GradientStop Color="#FFD2E3F7" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Border>
                </Border>
                <Border x:Name="pressed" Background="#FF8EA7C4" CornerRadius="2" Visibility="Collapsed">
                    <Border CornerRadius="1" Margin="1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFDDE8F5" Offset="1" />
                                <GradientStop Color="#FFE0EEFF" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border CornerRadius="1" Margin="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFD6E1F1" Offset="1" />
                                    <GradientStop Color="#FFD0DFEF" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Border>
                </Border>
                <Path x:Name="path" Stretch="Fill" Fill="#FF6F87A3" HorizontalAlignment="Center" Data="F1 M 1207,889L 1209,889L 1206,892L 1209,895L 1207,895L 1205,893L 1203,895L 1201,895L 1204,892L 1201,889L 1203,889L 1205,891L 1207,889 Z " Height="6" Margin="0" UseLayoutRounding="False" VerticalAlignment="Center" Width="8" />
            </Grid>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{dxt:DXTabItemThemeKey ResourceKey=CloseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{DynamicResource {dxt:DXTabItemThemeKey ResourceKey=CloseButtonTemplate}}" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Height" Value="14" />
    </Style>

    <ControlTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=Template}" TargetType="{x:Type dx:DXTabItem}">
        <Grid UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
            <VisualStateManager.VisualStateGroups>
                <!--<VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="EmptyCommonState" />
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="normal" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Color="#FFC4CBDC" Offset="0" />
                                            <GradientStop Color="#FFC4CBDC" Offset="1" />
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="normal" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FF5186D8" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>-->
                <!--<VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="EmptySelectionState" />
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="normal" Storyboard.TargetProperty="Opacity">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Double>0</sys:Double>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="selected" Storyboard.TargetProperty="Opacity">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Double>1</sys:Double>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>-->
                <VisualStateGroup x:Name="LocationStates">
                    <VisualState x:Name="EmptyLocationState" />
                    <VisualState x:Name="LocationTopHorizontal" />
                    <VisualState x:Name="LocationLeftVertical" />
                    <VisualState x:Name="LocationRightVertical" />
                    <VisualState x:Name="LocationBottomHorizontal" />
                    <VisualState x:Name="LocationTopVertical" />
                    <VisualState x:Name="LocationLeftHorizontal" />
                    <VisualState x:Name="LocationRightHorizontal" />
                    <VisualState x:Name="LocationBottomVertical" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ViewModeState">
                    <VisualState x:Name="EmptyViewModeState" />
                    <VisualState x:Name="NormalViewMode" />
                    <VisualState x:Name="HoldViewMode" />
                    <VisualState x:Name="ScrollViewMode" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dx:HeaderContainerPresenter x:Name="headerContainerPresenter">
                <Grid Margin="0,0,12,0">
                    <Grid>
                        <Grid x:Name="borderContainer">
                            <Canvas ClipToBounds="False">
                                <Path x:Name="TabPath" StrokeThickness="1"  Margin="0,4,0,0"  Stroke="#FF3E73C5" Fill="#FFA4BFE6">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathFigure IsClosed="False" StartPoint="1,0" Segments="{Binding ElementName=gridContainer, Converter={x:Static local:ContentToPathConverter.Default}}">
                                            </PathFigure>
                                        </PathGeometry>
                                    </Path.Data>
                                    <Path.LayoutTransform>
                                        <ScaleTransform ScaleY="-1" />
                                    </Path.LayoutTransform>
                                </Path>
                            </Canvas>
                            <Border x:Name="normal" Grid.Column="0" BorderThickness="0" Background="Transparent">
                            </Border>
                            <Border x:Name="selected" Grid.Column="0" BorderThickness="0" Background="Transparent">
                            </Border>
                            <Border x:Name="hover" Grid.Column="0" BorderThickness="0" Background="Transparent">
                            </Border>
                                                       
                        </Grid>
                        <Grid x:Name="gridContainer" Margin="0,3,3,0">
                            <Grid x:Name="headerContainer" Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <dx:HeaderIconPresenter x:Name="headerIconPresenter" IsTabStop="False" Grid.Column="0" Content="{TemplateBinding Icon}" 
                                                                   IconWidth="{TemplateBinding IconWidth}" IconHeight="{TemplateBinding IconHeight}"
                                                                   VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,4,0" Visibility="Collapsed" />
                                <dx:DXContentPresenter FontWeight="Bold" Foreground="#FF0F488D" IsTabStop="False" Grid.Column="2" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                                 VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                <Button IsTabStop="False" x:Name="closeButton" Grid.Column="4"
                                                HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="Collapsed"
                                                Style="{DynamicResource {dxt:DXTabItemThemeKey ResourceKey=CloseButtonStyle}}" Margin="3,1,-6,0" />
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>
            </dx:HeaderContainerPresenter>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="Fill" TargetName="TabPath" Value="#FFA4BFE6"/>
                <Setter Property="Stroke" TargetName="TabPath" Value="#FF3E73C5"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="TabPath" Value="#FFC4CBDC"/>
                <Setter Property="Stroke" TargetName="TabPath" Value="#FF3E73C5"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Fill" TargetName="TabPath" Value="#FFD0DFF2"/>
                <Setter Property="Stroke" TargetName="TabPath" Value="#FFD0DFF2"/>
            </Trigger>                     
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Thickness x:Key="{dxt:DXTabItemThemeKey ResourceKey=Padding}">9,3,9,3</Thickness>
    <SolidColorBrush x:Key="{dxt:DXTabItemThemeKey ResourceKey=ForegroundBrush}" Color="Black" />


</ResourceDictionary>